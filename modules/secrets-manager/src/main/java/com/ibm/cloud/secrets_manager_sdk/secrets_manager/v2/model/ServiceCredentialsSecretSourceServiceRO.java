/*
 * (C) Copyright IBM Corp. 2025.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

package com.ibm.cloud.secrets_manager_sdk.secrets_manager.v2.model;

import com.google.gson.annotations.SerializedName;
import com.ibm.cloud.sdk.core.service.model.GenericModel;

/**
 * The properties of the resource key that was created for this source service instance.
 */
public class ServiceCredentialsSecretSourceServiceRO extends GenericModel {

    protected ServiceCredentialsSourceServiceInstance instance;
    protected ServiceCredentialsSourceServiceParameters parameters;
    protected ServiceCredentialsSourceServiceRole role;
    protected ServiceCredentialsSourceServiceIam iam;
    @SerializedName("resource_key")
    protected ServiceCredentialsResourceKey resourceKey;

    protected ServiceCredentialsSecretSourceServiceRO() {
    }

    /**
     * Gets the instance.
     * <p>
     * The source service instance identifier.
     *
     * @return the instance
     */
    public ServiceCredentialsSourceServiceInstance getInstance() {
        return instance;
    }

    /**
     * Gets the parameters.
     * <p>
     * Configuration options represented as key-value pairs. Service-defined options are used in the generation of
     * credentials for some services. For example, Cloud Object Storage accepts the optional boolean parameter HMAC for
     * creating specific kind of credentials.
     *
     * @return the parameters
     */
    public ServiceCredentialsSourceServiceParameters getParameters() {
        return parameters;
    }

    /**
     * Gets the role.
     * <p>
     * The service-specific custom role. CRN is accepted. The role is assigned as part of an access policy to any
     * auto-generated IAM service ID.  If you provide an existing service ID, it is added to the access policy for that
     * ID.  If a role is not provided, any new service IDs that are autogenerated, will not have an assigned access policy
     * and provided service IDs are not changed in any way.  Refer to the service documentation for supported roles.
     *
     * @return the role
     */
    public ServiceCredentialsSourceServiceRole getRole() {
        return role;
    }

    /**
     * Gets the iam.
     * <p>
     * The source service IAM data is returned in case IAM credentials where created for this secret.
     *
     * @return the iam
     */
    public ServiceCredentialsSourceServiceIam getIam() {
        return iam;
    }

    /**
     * Gets the resourceKey.
     * <p>
     * The source service resource key data of the generated service credentials.
     *
     * @return the resourceKey
     */
    public ServiceCredentialsResourceKey getResourceKey() {
        return resourceKey;
    }
}

