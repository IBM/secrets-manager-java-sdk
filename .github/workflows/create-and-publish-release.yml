# This workflow will install Python dependencies, and publishes a new release.
# For more information see: https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: Publish a new release

on:
  push:
    branches: 
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Changelog
      uses: scottbrenner/generate-changelog-action@master
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: v0.0.${{ github.run_number }}
        release_name: Release v0.0.${{ github.run_number }}
        body: |
          ${{ steps.Changelog.outputs.changelog }}
        draft: false
        prerelease: false
    - name: Install Java and Maven
      uses: actions/setup-java@v1
      with:
        java-version: 8

    - name: Release Maven package
      uses: samuelmeuli/action-maven-publish@v1
      with:
          gpg_private_key: ${{ secrets.GPG_SIGNING_KEY }}
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
          nexus_username: ${{ secrets.MAVEN_USERNAME }}
          nexus_password: ${{ secrets.MAVEN_PASSWORD }}
          SECRETS_MANAGER_API_AUTH_TYPE: iam
          SECRETS_MANAGER_API_APIKEY: ${{ secrets.SECRETS_MANAGER_API_APIKEY }}
          SERVICE_URL: https://9476d663-dc80-4132-aff6-4585ebbdfb2d.us-south.secrets-manager.appdomain.cloud
