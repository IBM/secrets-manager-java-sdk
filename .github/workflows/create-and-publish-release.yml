# This workflow will install Python dependencies, and publishes a new release.
# For more information see: https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: Publish a new release

on:
  push:
    branches: 
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Changelog
      uses: scottbrenner/generate-changelog-action@master
    - name: Bump version and push tag
      uses: jaumann/github-bumpversion-action@v0.0.7
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tags: true
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: Release v1.0.${{ github.run_number }}
        body: |
          ${{ steps.Changelog.outputs.changelog }}
        draft: false
        prerelease: false
    - name: Configure GPG Key
      run: |
            cat <(echo -e "${{ secrets.GPG_SIGNING_KEY }}") | gpg --batch --import
            gpg --list-secret-keys --keyid-format LONG
    - name: Set up Maven Central Repository
      uses: actions/setup-java@v1
      with:
          java-version: 1.8
          server-id: ossrh
          server-username: ${{ secrets.MAVEN_USERNAME }}
          server-password: ${{ secrets.MAVEN_PASSWORD }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
    - name: Publish package
      run: mvn clean deploy $MVN_ARGS -P central --no-transfer-progress --batch-mode -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}
      env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          AUTH_URL: https://iam.cloud.ibm.com/identity/token
          SECRETS_MANAGER_API_AUTH_TYPE: iam
          SECRETS_MANAGER_API_APIKEY: ${{ secrets.SECRETS_MANAGER_API_APIKEY }}
          SERVICE_URL: https://9476d663-dc80-4132-aff6-4585ebbdfb2d.us-south.secrets-manager.appdomain.cloud
          MVN_ARGS: "--settings build-settings.xml"
          DNS_CONFIG_CRN: "crn:v1:staging:public:internet-svcs-ci:global:a/791f5fb10986423e97aa8512f18b7e65:dc08a28a-9181-45db-bf0d-a8733a5796b6::"
          CA_CONFIG_PRIVATE_KEY: ${{ secrets.CA_CONFIG_PRIVATE_KEY }}
          DNS_CONFIG_API_KEY: ${{ secrets.DNS_CONFIG_API_KEY }}
